laser = rossubscriber('/base_scan');
robotPos = rossubscriber('/odom');

%Fahrbefehle in Form von Geschwindigkeiten
robotCmd = rospublisher('/cmd_vel', 'geometry_msgs/Twist');
velMsg = rosmessage(robotCmd);


scandata = receive(laser,10);
angles = linspace(scandata.AngleMin, scandata.AngleMax, numel(scandata.Ranges));
xy = readCartesian(scandata);
ranges = scandata.Ranges;
ranges(720);

values = 1:720;
%histogram(720,ranges);

%bar(values,ranges);

scandata = receive(laser,10);
%angles = linspace(scandata.AngleMin, scandata.AngleMax, numel(scandata.Ranges));


while false
    scandata = receive(laser,10);
    ranges = scandata.Ranges;
    vel_msg = rosmessage(robotCmd);
    vel_msg.Linear.X = 0.5;
    send(robotCmd,vel_msg);
    xy = readCartesian(scandata(1));
    plot(xy(:,1),xy(:,2))
    
    
    if ranges(1) < 1
       
        vel_msg.Linear.X = 0;
        send(robotCmd,vel_msg);
        
        x_pkt = 2.0;
        y_pkt = 2.0;
        
        x_rob_laser = x_pkt
        y_rob_laser = y_pkt + ranges(720)
        
        x_rob = x_rob_laser - 0.3
        y_rob = y_rob_laser
        
        
        ranges_new = ranges(100:620);
        
        sec_min_range, sec_min_inc = min(ranges_new)
        angle_min = deg2rad(scandata.AngleMin);
        angle_max = deg2rad(scandata.AngleMax);
        angle_inc = deg2rad(scandata.AngleIncrement);
        %angles = angle_min +  * angle_inc;
        
        
        %x_sec_pkt = 
        %y_sec_pkt = 
        
        break;
        
    end
    
    
end